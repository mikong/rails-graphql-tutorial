input AuthProviderEmailInput {
  email: String!
  password: String!
}

input AuthProviderSignupData {
  email: AuthProviderEmailInput
}

type Link {
  createdAt: String!
  description: String
  id: ID!
  postedBy: User!
  url: String!
  votes: [Vote!]!
}

input LinkFilter {
  OR: [LinkFilter!]
  descContains: String
  urlContains: String
}

type Mutation {
  createLink(description: String, url: String!): Link
  createUser(authProvider: AuthProviderSignupData, name: String!): User
  createVote(linkId: ID!): Vote
  signInUser(email: AuthProviderEmailInput): SignInUserPayload
}

type Query {
  allLinks(filter: LinkFilter): [Link]
}

"""
Autogenerated return type of SignInUser
"""
type SignInUserPayload {
  token: String
  user: User
}

type User {
  email: String!
  id: ID!
  name: String!
}

type Vote {
  id: ID!
  link: Link!
  user: User!
}